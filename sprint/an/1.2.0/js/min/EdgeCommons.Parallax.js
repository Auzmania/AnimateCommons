// EdgeCommons for Edge Animate v1.2.0 +++ Visit edgecommons.org for documentation, updates and examples +++ Copyright (c) 2013 by Simon Widjaja +++ Distributed under the terms of the MIT license (http://www.opensource.org/licenses/mit-license.html) +++ This notice shall be included in all copies or substantial portions of the Software.

!function(a,b){var c=function(){};c.VERSION="1.2.0",c.$=b;a.EC=a.EdgeCommons=c}(window,jQuery),function(a){var b=function(){};b.VERSION="1.1.0",b.compositions={};var c=a.$,d=ModulogLog,e="EdgeCommons | Parallax";b.addComposition=function(b){console.log("HIDE NOT CALC: ",AdobeEdge.getComposition(b).getStage().getSymbolElement().height()),AdobeEdge.Symbol.bindSymbolAction("EDGE-55243610","mySym","creationComplete",function(){consoel.log("XXXXXXXXXXX")}),AdobeEdge.Symbol.bindSymbolAction("EDGE-55243610","stage","compositionReady",function(){consoel.log("compositionReady")}),AdobeEdge.bootstrapCallback(function(b){console.log(b),a.debug("bootstrap","BOOT",{stageHeight:AdobeEdge.getComposition(b).getStage().getSymbolElement().height()}),AdobeEdge.Symbol.bindSymbolAction(b,"stage","creationComplete",function(){a.debug("stage::creationcomplete","BOOT")}),AdobeEdge.Symbol.bindSymbolAction(b,"stage","compositionReady",function(){a.debug("stage::compositionReady","BOOT")}),AdobeEdge.Symbol.bindSymbolAction(b,"mySym","beforeDeletion",function(){a.debug("mySym::beforeDeletion","BOOT")})}),this.compositions[b]={};var c=AdobeEdge.getComposition(b).getStage();this.compositions[b].stage=c;var d=AdobeEdge.getComposition(b).getStage().getSymbolElement();console.log("AdobeEdge.getComposition(compId).getStage()",AdobeEdge.getComposition(b).getStage()),this.compositions[b].stageElement=d;var e=d.height();console.log("stageElement",d),setTimeout(function(){console.log(d.height()),e=d.height()},1),console.log("stage.height",d.height());var f=d.width();this.compositions[b].stageHeight=e,this.compositions[b].stageWidth=f;var g=d.position().top;this.compositions[b].stageTop=g,this.compositions[b].stageMiddle=Math.floor(g+e/2),this.compositions[b].duration=c.getDuration(),c.stop(0)},b.setup=function(b,f){return b?(void 0===f&&(f="vertical"),this.addComposition(b.getComposition().compId),console.log("window.height",c(window).height()),c(document).scroll(function(){function b(){c.each(a.Parallax.compositions,function(a,b){var d=e/(b.stageHeight-c(window).height());console.log("c.stageHeight",b.stageHeight),console.log("scrollbarFactor",d)})}function d(){c.each(a.Parallax.compositions,function(a,b){var d=e/(b.stageWidth-c(window).width()),f=Math.floor(d*b.duration);b.stage.stop(f)})}if("vertical"==f){var e=c(document).scrollTop();b()}else if("horizontal"==f){var e=c(document).scrollLeft();d()}}),void 0):(d.error("Error in setup(). Argument 'sym' is not optional.",e),void 0)},a.Parallax=b}(EdgeCommons);